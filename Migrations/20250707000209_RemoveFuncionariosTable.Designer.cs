// <auto-generated />
using System;
using API_Pdv.Infraestructure.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API_Pdv.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250707000209_RemoveFuncionariosTable")]
    partial class RemoveFuncionariosTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("API_Pdv.Entities.AtividadeRecente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<string>("Entidade")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("EntidadeId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("AtividadesRecentes");
                });

            modelBuilder.Entity("API_Pdv.Entities.Caixa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataAbertura")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_abertura");

                    b.Property<DateTime?>("DataFechamento")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_fechamento");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int")
                        .HasColumnName("empresa_id");

                    b.Property<string>("Observacao")
                        .HasColumnType("TEXT")
                        .HasColumnName("observacao");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("status");

                    b.Property<decimal>("TotalCartaoCredito")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("total_cartao_credito");

                    b.Property<decimal>("TotalCartaoDebito")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("total_cartao_debito");

                    b.Property<decimal>("TotalDinheiro")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("total_dinheiro");

                    b.Property<decimal>("TotalOutros")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("total_outros");

                    b.Property<decimal>("TotalPix")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("total_pix");

                    b.Property<decimal>("TotalVendas")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("total_vendas");

                    b.Property<decimal>("TrocoFinal")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("troco_final");

                    b.Property<decimal>("ValorAbertura")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("valor_abertura");

                    b.Property<decimal>("ValorFechamento")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("valor_fechamento");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.ToTable("caixas", (string)null);
                });

            modelBuilder.Entity("API_Pdv.Entities.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Categorias", (string)null);
                });

            modelBuilder.Entity("API_Pdv.Entities.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("CEP")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CPFCNPJ")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Cidade")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<string>("Endereco")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Telefone")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("UF")
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("Ativo")
                        .HasDatabaseName("idx_cliente_ativo");

                    b.HasIndex("CPFCNPJ")
                        .HasDatabaseName("idx_cliente_cpfcnpj");

                    b.HasIndex("Email")
                        .HasDatabaseName("idx_cliente_email");

                    b.HasIndex("EmpresaId")
                        .HasDatabaseName("idx_cliente_empresa");

                    b.HasIndex("Nome")
                        .HasDatabaseName("idx_cliente_nome");

                    b.ToTable("Clientes", (string)null);
                });

            modelBuilder.Entity("API_Pdv.Entities.Empresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("varchar(14)")
                        .HasColumnName("cnpj");

                    b.Property<string>("CRT")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("crt");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("InscricaoEstadual")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("inscricao_estadual");

                    b.Property<byte[]>("LogoBase64")
                        .HasColumnType("LONGBLOB")
                        .HasColumnName("logo_base64");

                    b.Property<string>("LogoMimeType")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("logo_mime_type");

                    b.Property<string>("LogoNome")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("logo_nome");

                    b.Property<string>("NomeFantasia")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("nome_fantasia");

                    b.Property<string>("RazaoSocial")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("razao_social");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("CNPJ")
                        .IsUnique()
                        .HasDatabaseName("idx_cnpj");

                    b.HasIndex("RazaoSocial")
                        .HasDatabaseName("idx_razao_social");

                    b.ToTable("empresas", (string)null);
                });

            modelBuilder.Entity("API_Pdv.Entities.ItemPedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Observacoes")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<int>("PedidoId")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecoUnitario")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("PedidoId")
                        .HasDatabaseName("idx_item_pedido_pedido");

                    b.HasIndex("ProdutoId")
                        .HasDatabaseName("idx_item_pedido_produto");

                    b.ToTable("ItensPedido", (string)null);
                });

            modelBuilder.Entity("API_Pdv.Entities.ItemVenda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal?>("Desconto")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("PrecoUnitario")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("VendaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoId")
                        .HasDatabaseName("idx_item_venda_produto");

                    b.HasIndex("VendaId")
                        .HasDatabaseName("idx_item_venda_venda");

                    b.ToTable("ItensVenda", (string)null);
                });

            modelBuilder.Entity("API_Pdv.Entities.Motoboy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("documento");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int")
                        .HasColumnName("empresa_id");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nome");

                    b.Property<string>("Observacao")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("observacao");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("placa");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("status");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("telefone");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.Property<string>("Veiculo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("veiculo");

                    b.HasKey("Id");

                    b.ToTable("motoboy", (string)null);
                });

            modelBuilder.Entity("API_Pdv.Entities.PagamentoCaixa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CaixaId")
                        .HasColumnType("int")
                        .HasColumnName("caixa_id");

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_hora");

                    b.Property<string>("FormaPagamento")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("forma_pagamento");

                    b.Property<string>("Observacao")
                        .HasColumnType("TEXT")
                        .HasColumnName("observacao");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("valor");

                    b.HasKey("Id");

                    b.HasIndex("CaixaId");

                    b.ToTable("pagamentos_caixa", (string)null);
                });

            modelBuilder.Entity("API_Pdv.Entities.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CaixaId")
                        .HasColumnType("int");

                    b.Property<int?>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DataConclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataPedido")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("EmailCliente")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<string>("EnderecoCliente")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NomeCliente")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NumeroComanda")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("NumeroPedido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Observacoes")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<int>("QuantidadeItens")
                        .HasColumnType("int");

                    b.Property<int?>("SituacaoId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TelefoneCliente")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("CaixaId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("DataPedido")
                        .HasDatabaseName("idx_pedido_data");

                    b.HasIndex("EmpresaId")
                        .HasDatabaseName("idx_pedido_empresa");

                    b.HasIndex("NumeroPedido")
                        .HasDatabaseName("idx_pedido_numero");

                    b.HasIndex("SituacaoId");

                    b.HasIndex("Status")
                        .HasDatabaseName("idx_pedido_status");

                    b.ToTable("Pedidos", (string)null);
                });

            modelBuilder.Entity("API_Pdv.Entities.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("AliquotaCofins")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(5,2)")
                        .HasDefaultValue(7.60m)
                        .HasColumnName("aliquota_cofins");

                    b.Property<decimal?>("AliquotaIcms")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(5,2)")
                        .HasDefaultValue(0.00m)
                        .HasColumnName("aliquota_icms");

                    b.Property<decimal?>("AliquotaIpi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(5,2)")
                        .HasDefaultValue(0.00m)
                        .HasColumnName("aliquota_ipi");

                    b.Property<decimal?>("AliquotaPis")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(5,2)")
                        .HasDefaultValue(1.65m)
                        .HasColumnName("aliquota_pis");

                    b.Property<decimal?>("BaseCalculoCofins")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10,2)")
                        .HasDefaultValue(0.00m)
                        .HasColumnName("base_calculo_cofins");

                    b.Property<decimal?>("BaseCalculoIcms")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10,2)")
                        .HasDefaultValue(0.00m)
                        .HasColumnName("base_calculo_icms");

                    b.Property<decimal?>("BaseCalculoIpi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10,2)")
                        .HasDefaultValue(0.00m)
                        .HasColumnName("base_calculo_ipi");

                    b.Property<decimal?>("BaseCalculoPis")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10,2)")
                        .HasDefaultValue(0.00m)
                        .HasColumnName("base_calculo_pis");

                    b.Property<string>("CEST")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("cest");

                    b.Property<string>("CFOP")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("cfop");

                    b.Property<string>("CSOSN_CST")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("csosn_cst");

                    b.Property<int?>("CategoriaId")
                        .HasColumnType("int")
                        .HasColumnName("categoria_id");

                    b.Property<string>("CodigoBarras")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("codigo_barras");

                    b.Property<string>("CodigoEan")
                        .HasMaxLength(14)
                        .HasColumnType("varchar(14)")
                        .HasColumnName("codigo_ean");

                    b.Property<string>("CodigoProduto")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("codigo_produto");

                    b.Property<bool>("ControlaEstoque")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true)
                        .HasColumnName("controla_estoque");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("CstCofins")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasDefaultValue("01")
                        .HasColumnName("cst_cofins");

                    b.Property<string>("CstIcms")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasDefaultValue("00")
                        .HasColumnName("cst_icms");

                    b.Property<string>("CstIpi")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasDefaultValue("50")
                        .HasColumnName("cst_ipi");

                    b.Property<string>("CstPis")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasDefaultValue("01")
                        .HasColumnName("cst_pis");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT")
                        .HasColumnName("descricao");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int")
                        .HasColumnName("empresa_id");

                    b.Property<int>("EstoqueAtual")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("estoque_atual");

                    b.Property<int>("EstoqueMaximo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("estoque_maximo");

                    b.Property<int>("EstoqueMinimo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("estoque_minimo");

                    b.Property<byte[]>("ImagemBase64")
                        .HasColumnType("LONGBLOB")
                        .HasColumnName("imagem_base64");

                    b.Property<string>("ImagemMimeType")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("imagem_mime_type");

                    b.Property<string>("ImagemNome")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("imagem_nome");

                    b.Property<string>("ImagemUrl")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("imagem_url");

                    b.Property<string>("InformacoesAdicionais")
                        .HasColumnType("TEXT")
                        .HasColumnName("informacoes_adicionais");

                    b.Property<string>("Ingredientes")
                        .HasColumnType("TEXT")
                        .HasColumnName("ingredientes");

                    b.Property<string>("LocalizacaoEstoque")
                        .HasColumnType("longtext")
                        .HasColumnName("localizacao_estoque");

                    b.Property<string>("NCM")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("ncm");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nome");

                    b.Property<string>("NomeAlternativo")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nome_alternativo");

                    b.Property<byte?>("OrigemProduto")
                        .HasColumnType("tinyint unsigned")
                        .HasColumnName("origem_produto");

                    b.Property<string>("Peso")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("peso");

                    b.Property<decimal?>("PrecoCusto")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("preco_custo");

                    b.Property<decimal?>("PrecoVenda")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("preco_venda");

                    b.Property<int?>("QuantidadePadrao")
                        .HasColumnType("int")
                        .HasColumnName("quantidade_padrao");

                    b.Property<string>("ServePessoas")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("serve_pessoas");

                    b.Property<bool>("Situacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true)
                        .HasColumnName("situacao");

                    b.Property<DateTime?>("UltimaMovimentacao")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("ultima_movimentacao");

                    b.Property<string>("UnidadeVenda")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasDefaultValue("UN")
                        .HasColumnName("unidade_venda");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.Property<decimal?>("ValorCofins")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10,2)")
                        .HasDefaultValue(0.00m)
                        .HasColumnName("valor_cofins");

                    b.Property<decimal?>("ValorIcms")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10,2)")
                        .HasDefaultValue(0.00m)
                        .HasColumnName("valor_icms");

                    b.Property<decimal?>("ValorIpi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10,2)")
                        .HasDefaultValue(0.00m)
                        .HasColumnName("valor_ipi");

                    b.Property<decimal?>("ValorPis")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10,2)")
                        .HasDefaultValue(0.00m)
                        .HasColumnName("valor_pis");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId")
                        .HasDatabaseName("idx_categoria_id");

                    b.HasIndex("CodigoBarras")
                        .HasDatabaseName("idx_codigo_barras");

                    b.HasIndex("CodigoEan")
                        .HasDatabaseName("idx_codigo_ean");

                    b.HasIndex("NCM")
                        .HasDatabaseName("idx_ncm");

                    b.HasIndex("Situacao")
                        .HasDatabaseName("idx_situacao");

                    b.HasIndex("EmpresaId", "CodigoProduto")
                        .IsUnique()
                        .HasDatabaseName("uk_empresa_codigo_produto");

                    b.ToTable("produtos", (string)null);
                });

            modelBuilder.Entity("API_Pdv.Entities.StatusPedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("StatusPedidos", (string)null);
                });

            modelBuilder.Entity("API_Pdv.Entities.Transacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<string>("FormaPagamento")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Observacoes")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("DataHora")
                        .HasDatabaseName("idx_transacao_data");

                    b.HasIndex("EmpresaId")
                        .HasDatabaseName("idx_transacao_empresa");

                    b.HasIndex("Tipo")
                        .HasDatabaseName("idx_transacao_tipo");

                    b.ToTable("Transacoes", (string)null);
                });

            modelBuilder.Entity("API_Pdv.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Perfil")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("UltimoAcesso")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("Ativo")
                        .HasDatabaseName("idx_usuario_ativo");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("idx_usuario_email");

                    b.HasIndex("EmpresaId")
                        .HasDatabaseName("idx_usuario_empresa");

                    b.ToTable("Usuarios", (string)null);
                });

            modelBuilder.Entity("API_Pdv.Entities.Venda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CPFCNPJ")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataVenda")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal?>("Desconto")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("EmailCliente")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<string>("FormaPagamento")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NomeCliente")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NumeroVenda")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Observacoes")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("SituacaoId")
                        .HasColumnType("int");

                    b.Property<string>("TelefoneCliente")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("TotalFinal")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("CPFCNPJ")
                        .HasDatabaseName("idx_venda_cpfcnpj");

                    b.HasIndex("ClienteId");

                    b.HasIndex("DataVenda")
                        .HasDatabaseName("idx_venda_data");

                    b.HasIndex("EmpresaId")
                        .HasDatabaseName("idx_venda_empresa");

                    b.HasIndex("NumeroVenda")
                        .HasDatabaseName("idx_venda_numero");

                    b.HasIndex("SituacaoId");

                    b.ToTable("Vendas", (string)null);
                });

            modelBuilder.Entity("API_Pdv.Entities.AtividadeRecente", b =>
                {
                    b.HasOne("API_Pdv.Entities.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId");

                    b.HasOne("API_Pdv.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Empresa");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("API_Pdv.Entities.Caixa", b =>
                {
                    b.HasOne("API_Pdv.Entities.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("API_Pdv.Entities.Cliente", b =>
                {
                    b.HasOne("API_Pdv.Entities.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("API_Pdv.Entities.Empresa", b =>
                {
                    b.OwnsOne("API_Pdv.Entities.Endereco", "Endereco", b1 =>
                        {
                            b1.Property<int>("EmpresaId")
                                .HasColumnType("int");

                            b1.Property<string>("Bairro")
                                .HasMaxLength(100)
                                .HasColumnType("varchar(100)")
                                .HasColumnName("endereco_bairro");

                            b1.Property<string>("CEP")
                                .HasMaxLength(10)
                                .HasColumnType("varchar(10)")
                                .HasColumnName("endereco_cep");

                            b1.Property<string>("CodigoMunicipio")
                                .HasMaxLength(10)
                                .HasColumnType("varchar(10)")
                                .HasColumnName("endereco_codigo_municipio");

                            b1.Property<string>("CodigoPais")
                                .ValueGeneratedOnAdd()
                                .HasMaxLength(10)
                                .HasColumnType("varchar(10)")
                                .HasDefaultValue("1058")
                                .HasColumnName("endereco_codigo_pais");

                            b1.Property<string>("Complemento")
                                .HasMaxLength(100)
                                .HasColumnType("varchar(100)")
                                .HasColumnName("endereco_complemento");

                            b1.Property<string>("Logradouro")
                                .HasMaxLength(255)
                                .HasColumnType("varchar(255)")
                                .HasColumnName("endereco_logradouro");

                            b1.Property<string>("NomeMunicipio")
                                .HasMaxLength(100)
                                .HasColumnType("varchar(100)")
                                .HasColumnName("endereco_nome_municipio");

                            b1.Property<string>("NomePais")
                                .ValueGeneratedOnAdd()
                                .HasMaxLength(50)
                                .HasColumnType("varchar(50)")
                                .HasDefaultValue("Brasil")
                                .HasColumnName("endereco_nome_pais");

                            b1.Property<string>("Numero")
                                .HasMaxLength(20)
                                .HasColumnType("varchar(20)")
                                .HasColumnName("endereco_numero");

                            b1.Property<string>("UF")
                                .HasMaxLength(2)
                                .HasColumnType("varchar(2)")
                                .HasColumnName("endereco_uf");

                            b1.HasKey("EmpresaId");

                            b1.ToTable("empresas");

                            b1.WithOwner()
                                .HasForeignKey("EmpresaId");
                        });

                    b.Navigation("Endereco")
                        .IsRequired();
                });

            modelBuilder.Entity("API_Pdv.Entities.ItemPedido", b =>
                {
                    b.HasOne("API_Pdv.Entities.Pedido", "Pedido")
                        .WithMany("ItensPedido")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API_Pdv.Entities.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Pedido");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("API_Pdv.Entities.ItemVenda", b =>
                {
                    b.HasOne("API_Pdv.Entities.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("API_Pdv.Entities.Venda", "Venda")
                        .WithMany("ItensVenda")
                        .HasForeignKey("VendaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produto");

                    b.Navigation("Venda");
                });

            modelBuilder.Entity("API_Pdv.Entities.PagamentoCaixa", b =>
                {
                    b.HasOne("API_Pdv.Entities.Caixa", "Caixa")
                        .WithMany("Pagamentos")
                        .HasForeignKey("CaixaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Caixa");
                });

            modelBuilder.Entity("API_Pdv.Entities.Pedido", b =>
                {
                    b.HasOne("API_Pdv.Entities.Caixa", null)
                        .WithMany("Pedidos")
                        .HasForeignKey("CaixaId");

                    b.HasOne("API_Pdv.Entities.Cliente", null)
                        .WithMany("Pedidos")
                        .HasForeignKey("ClienteId");

                    b.HasOne("API_Pdv.Entities.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("API_Pdv.Entities.StatusPedido", "Situacao")
                        .WithMany()
                        .HasForeignKey("SituacaoId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Empresa");

                    b.Navigation("Situacao");
                });

            modelBuilder.Entity("API_Pdv.Entities.Produto", b =>
                {
                    b.HasOne("API_Pdv.Entities.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("API_Pdv.Entities.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("API_Pdv.Entities.Transacao", b =>
                {
                    b.HasOne("API_Pdv.Entities.Categoria", "CategoriaEntidade")
                        .WithMany()
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("API_Pdv.Entities.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CategoriaEntidade");

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("API_Pdv.Entities.Usuario", b =>
                {
                    b.HasOne("API_Pdv.Entities.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("API_Pdv.Entities.Venda", b =>
                {
                    b.HasOne("API_Pdv.Entities.Cliente", null)
                        .WithMany("Vendas")
                        .HasForeignKey("ClienteId");

                    b.HasOne("API_Pdv.Entities.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("API_Pdv.Entities.StatusPedido", "Situacao")
                        .WithMany()
                        .HasForeignKey("SituacaoId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Empresa");

                    b.Navigation("Situacao");
                });

            modelBuilder.Entity("API_Pdv.Entities.Caixa", b =>
                {
                    b.Navigation("Pagamentos");

                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("API_Pdv.Entities.Cliente", b =>
                {
                    b.Navigation("Pedidos");

                    b.Navigation("Vendas");
                });

            modelBuilder.Entity("API_Pdv.Entities.Pedido", b =>
                {
                    b.Navigation("ItensPedido");
                });

            modelBuilder.Entity("API_Pdv.Entities.Venda", b =>
                {
                    b.Navigation("ItensVenda");
                });
#pragma warning restore 612, 618
        }
    }
}
